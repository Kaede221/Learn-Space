/**
 * 计算机的存储规则
 */

public class HelloWorld {
    public static void main(String[] args) {
        // 计算机中，存在文本，图片和声音数据
        // 视频就是文本+图片+声音，所以这里不多说了

        // 只需要记住了：在计算机当中，任意数据都是由二进制存储的
        // 现实中，我们是10进制，计算机中，就是2进制，2进制的意思就是逢2进1，不会出现大于等于2的数字
        // 比如：1 10 11 100 这就是1，2，3，4的二进制形式了

        // 1+1什么情况下不等于2？当然是二进制的情况下
        // 代码中，存在如下对应关系
        /*
        二进制 0b---
        十进制 -----
        八进制 0----
        十六进制 0x----
         */
        // 这个就是十进制，默认就是十进制
        System.out.println(17);
        // 如果有个0，那么就是8进制，代表进位了 就是8+7=15啦
        System.out.println(017);
        // 如果有个0b 后面绝对不能出现大于等于2的东西，否则报错
        // System.out.println(0b12);
        System.out.println(0b11);

        // 十六进制之类的都是同理
        // 同时，计算机的电路板也是0和1，大于3.3V的就是1，否则就是0

        // ====================
        // 续接上集
        // 任意进制转10进制，其实就是
        // 系数 * 基数的权次幂 相加即可
        // 系数就是当前这个数位上面的数字
        // 基数就是当前的进制是多少
        // 权 从右往左，从0开始递增

        // 二进制到十进制，由一个快速转化的方式 叫做8421快速转换法
        // 比如11111111
        // 那么，每一位开始相加 从右往左，其实就是1 2 4 8 16 32 64 128
        // 那么直接对应需要的那个位，就可以快速计算二进制了

        // 十进制转其他进制
        // 叫做 除积取余法 不断地除以基数，得到余数，直到商为0即可，最后反转就是答案
        // 其他进制也是一样的

        // ====================
        // ASCII表 其实就是每一个字符对应的计算机中的存在的数字是多少
        // 计算机中，就是通过寻找对应的数字，转化二进制后，存储下来
        // 汉字很神奇，一开始就是就是不支持的，不过后来，出现了一个叫做GB-2312--80的表，让汉字和一个唯一的数字产生了关系
        // 进而进行汉字的储存
        // 现在Windows默认使用了GBK表，不过在编程中，使用UTF-8比较多，Unicode叫做万国码，包含了大多数国家的汉字

        // ====================
        // 对于图片来说，其实差不多，图片的颜色，本质就是三个颜色的叠加，每个像素点记录三个颜色即可
        // 三个颜色，计算机中是红绿蓝，这是光学三原色，可以更好的记录各种颜色 这就是RGB颜色了

        // ====================
        // 对于声音来说，其实差不多，每个声音都是由波形组成的，每个波形都有一个数字进行储存，只要采样点密集，则会很流畅，否则会卡顿
    }
}
